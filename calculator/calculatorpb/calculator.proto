syntax = "proto3";

package calculator;
option go_package="./calculator/calculatorpb";

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 result = 1;
}

message PrimeNumberDecompositionRequest {
  int64 number = 1;
}

message  PrimeNumberDecompositionResponse {
  int64 prime_factor = 1;
}

message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  double average = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 maximum = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double square_root = 1;
}

service CalculatorService {
  // Unary
  rpc Sum(SumRequest) returns (SumResponse) {};

  // Unary
  // This RPC will throw error if the sent number is negative
  // The error being sent will be of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};

  // Stream - Server
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest)
      returns (stream PrimeNumberDecompositionResponse) {};

  // Stream - Client
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  // Stream - BiDi
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};
}